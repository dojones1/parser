<?xml version="1.0" encoding="utf-8"?>
<!-- AXPT XML to MSc generator -->
<!-- Written by Donald Jones -->
<!-- 13th Oct 2006 -->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsl:param name="index" select="0"/>
  <xsl:output doctype-public="-//W3C//DTD SVG 1.1//EN" doctype-system="http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd" method="xml" indent="yes" encoding="utf-8"/>
  <xsl:include href="msc_const.xsl"/>

   <xsl:variable name="min_event_idx" select="$index * $max_events_per_iframe"/>
   <xsl:variable name="max_event_idx" select="(($index + 1) * $max_events_per_iframe) - 1"/>

    <xsl:variable name="events_this_iframe">
    	<xsl:choose>
	    	<xsl:when test="($index + 1) * $max_events_per_iframe &lt; $num_events+1">
	    		<xsl:value-of select="$max_events_per_iframe"/>
	    	</xsl:when>
	    	<xsl:otherwise>
	    		<xsl:value-of select="$num_events mod $max_events_per_iframe"/>
	    	</xsl:otherwise>
	    </xsl:choose>
    </xsl:variable>
    
    <!-- Position of maximum y plotted for body of diagram-->
    <xsl:variable name="max_y" select="($events_this_iframe * $event_delta_y)+25"/>
    
  <xsl:template match="/eventlist">
      <xsl:processing-instruction name="xml-stylesheet">
      <xsl:text>href="msc.css" type="text/css"</xsl:text>
    </xsl:processing-instruction>
    <xsl:comment>Created by XML to MSc generator</xsl:comment>
    <xsl:comment>Written by Donald Jones</xsl:comment>
    <xsl:comment>13th Oct 2006</xsl:comment>

    <!--<svg width="100%" version="1.1" xmlns="http://www.w3.org/2000/svg" onload="LoadHandler(evt)">-->
    <svg version="1.1"  xmlns="http://www.w3.org/2000/svg" onload="LoadHandler(evt)">
      <!-- width="200" height="2880" -->
      <xsl:attribute name="height">
        <xsl:value-of select="$max_y"/>
      </xsl:attribute>
      <xsl:attribute name="width">
          <xsl:value-of select="$tag_x + $tag_width"/>
      </xsl:attribute>

      <script xlink:href="Title.js" />
      <script>
        <![CDATA[
      function LoadHandler(event)
      {
         new Title(event.getTarget().getOwnerDocument(), 12);
      }
   ]]>
      </script>

      <xsl:comment>Predefined content</xsl:comment>

      <!-- Draw alternate light / dark bands -->
      <xsl:comment>Draw alternate light/dark bands</xsl:comment>
      <xsl:call-template name="drawBands">
        <xsl:with-param name="from_x" select="10"/>
        <xsl:with-param name="to_x" select="$tag_x + $tag_width+5"/> <!-- Hack to prevent box edge appearing on diagram. -->
        <xsl:with-param name="total_num" select="$events_this_iframe"/>
        <xsl:with-param name="num" select="0"/>
      </xsl:call-template>
      <!-- Autogenerated content -->
      <xsl:comment>Autogenerated content from here on</xsl:comment>
        <xsl:comment>min_event_idx: <xsl:value-of select="$min_event_idx"></xsl:value-of></xsl:comment>
        <xsl:comment>max_event_idx: <xsl:value-of select="$max_event_idx"></xsl:value-of></xsl:comment>
        <xsl:comment>num_events: <xsl:value-of select="$num_events"></xsl:value-of></xsl:comment>
	
	
	    <!-- Autogenerated content -->
	    <xsl:comment>Autogenerated content from here on</xsl:comment>
	    <xsl:for-each select="event">
    		<xsl:sort select="@line" data-type="number"/>
   			<xsl:if test="position() &gt;= $min_event_idx and position() &lt;= $max_event_idx">
	        <!-- Establish local variables -->
	        <xsl:variable name="temp_idx">
	          <xsl:value-of select="position() - $min_event_idx"/>
	        </xsl:variable>
	        <xsl:variable name="event_idx" select="$temp_idx - 1"/>
	        <xsl:variable name="event_y" select="($event_idx*$event_delta_y) + 40"/>
	
	        <g>
	            <a target="output"><xsl:attribute name="xlink:href"><xsl:value-of select="../@logname"/>.html#L<xsl:value-of select="@line"/></xsl:attribute>
	            <!-- Column data -->
	
	            <xsl:choose>
	            
	                <!-- Message -->
	                <xsl:when test="@type='msg'">
	                    <!-- Do nothing -->
	                </xsl:when>
	                <!-- State Change Event -->
	                <xsl:when test="@type='sc'">          
	                    <rect class="staterect" rx="1" ry="1">
	                        <xsl:attribute name="width">
	                            <xsl:value-of select="$line_width"/>
	                        </xsl:attribute>
	                        <xsl:attribute name="height">
	                            <xsl:value-of select="$band_height"/>
	                        </xsl:attribute>
	                        <xsl:attribute name="x">
	                            <xsl:value-of select="$row_band_min_x"/>
	                        </xsl:attribute>
	                        <xsl:attribute name="y">
	                            <xsl:value-of select="$event_y - 15"/>
	                        </xsl:attribute>
	                    </rect>
	                </xsl:when>
	                <xsl:otherwise>
	                    <!-- need to colour code the box based upon the severity -->
	                    <g>
	                        <rect class="eventrect" rx="1" ry="1">
	                            <xsl:attribute name="style">fill:<xsl:call-template name="getSevColour">
	                                    <xsl:with-param name="sev" select="@sev"/>
	                                </xsl:call-template></xsl:attribute>
	                            <xsl:attribute name="width">
	                                <xsl:value-of select="$line_width"/>
	                            </xsl:attribute>
	                            <xsl:attribute name="height">
	                                <xsl:value-of select="$band_height"/>
	                            </xsl:attribute>
	                            <xsl:attribute name="x">
	                                <xsl:value-of select="$row_band_min_x"/>
	                            </xsl:attribute>
	                            <xsl:attribute name="y">
	                                <xsl:value-of select="$event_y - 15"/>
	                            </xsl:attribute>
	                        </rect>
	            
	                    </g>
	                </xsl:otherwise>
	            </xsl:choose>
	            
	
	            <text class="msgtext"  text-anchor="right">
	              <xsl:attribute name="x">
	                <xsl:value-of select="$line_x"/>
	              </xsl:attribute>
	              <xsl:attribute name="y">
	                <xsl:value-of select="$event_y"/>
	              </xsl:attribute>
	              <xsl:value-of select="@line"/>
	            </text>
	            <text class="msgtext">
	              <xsl:attribute name="x">
	                <xsl:value-of select="$date_x"/>
	              </xsl:attribute>
	              <xsl:attribute name="y">
	                <xsl:value-of select="$event_y"/>
	              </xsl:attribute>
	              <xsl:value-of select="@date"/>
	            </text>
	            <text class="msgtext">
	              <xsl:attribute name="x">
	                <xsl:value-of select="$tag_x"/>
	              </xsl:attribute>
	              <xsl:attribute name="y">
	                <xsl:value-of select="$event_y"/>
	              </xsl:attribute>
	              <xsl:value-of select="@tag"/>
	            </text>
	            </a>
	        </g>
    		</xsl:if>
   		</xsl:for-each>
      
    </svg>

  </xsl:template>

  </xsl:stylesheet>
